// Code generated from DCell.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type DCellLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var DCellLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func dcelllexerLexerInit() {
	staticData := &DCellLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'.'", "'['", "']'", "'is'", "'not'", "'in'", "'('", "')'", "'!'",
		"'~'", "'+'", "'-'", "'**'", "'*'", "'/'", "'//'", "'%'", "'&&'", "'and'",
		"'||'", "'or'", "'<<'", "'>>'", "'&'", "'^'", "'|'", "'<='", "'<'",
		"'>'", "'>='", "'=='", "'!='", "'?'", "':'", "'?:'", "'??'", "'as'",
		"','", "'true'", "'false'", "'null'", "'int'", "'float'", "'string'",
		"'bool'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "IDENTIFIER", "DECIMAL_INTEGER",
		"HEX_INTEGER", "OCTAL_INTEGER", "BINARY_INTEGER", "DECIMAL_FLOAT", "SCIENTIFIC_FLOAT",
		"SINGLE_QUOTE_STRING", "DOUBLE_QUOTE_STRING", "TRIPLE_QUOTE_STRING",
		"WS", "COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
		"T__41", "T__42", "T__43", "T__44", "IDENTIFIER", "DECIMAL_INTEGER",
		"HEX_INTEGER", "OCTAL_INTEGER", "BINARY_INTEGER", "DECIMAL_FLOAT", "SCIENTIFIC_FLOAT",
		"SINGLE_QUOTE_STRING", "DOUBLE_QUOTE_STRING", "TRIPLE_QUOTE_STRING",
		"WS", "COMMENT", "ESC", "UNICODE", "HEX",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 57, 413, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2,
		1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6,
		1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12,
		1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 16, 1,
		16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19,
		1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1,
		23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28,
		1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1,
		32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 1, 39, 1,
		39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41,
		1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1,
		43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44,
		1, 45, 1, 45, 5, 45, 258, 8, 45, 10, 45, 12, 45, 261, 9, 45, 1, 45, 3,
		45, 264, 8, 45, 1, 46, 3, 46, 267, 8, 46, 1, 46, 1, 46, 5, 46, 271, 8,
		46, 10, 46, 12, 46, 274, 9, 46, 1, 46, 3, 46, 277, 8, 46, 1, 47, 1, 47,
		1, 47, 4, 47, 282, 8, 47, 11, 47, 12, 47, 283, 1, 48, 1, 48, 4, 48, 288,
		8, 48, 11, 48, 12, 48, 289, 1, 49, 1, 49, 1, 49, 4, 49, 295, 8, 49, 11,
		49, 12, 49, 296, 1, 50, 3, 50, 300, 8, 50, 1, 50, 1, 50, 1, 50, 5, 50,
		305, 8, 50, 10, 50, 12, 50, 308, 9, 50, 3, 50, 310, 8, 50, 1, 50, 1, 50,
		4, 50, 314, 8, 50, 11, 50, 12, 50, 315, 1, 51, 3, 51, 319, 8, 51, 1, 51,
		1, 51, 1, 51, 5, 51, 324, 8, 51, 10, 51, 12, 51, 327, 9, 51, 3, 51, 329,
		8, 51, 1, 51, 1, 51, 4, 51, 333, 8, 51, 11, 51, 12, 51, 334, 3, 51, 337,
		8, 51, 1, 51, 1, 51, 3, 51, 341, 8, 51, 1, 51, 1, 51, 5, 51, 345, 8, 51,
		10, 51, 12, 51, 348, 9, 51, 1, 52, 1, 52, 1, 52, 5, 52, 353, 8, 52, 10,
		52, 12, 52, 356, 9, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 5, 53, 363,
		8, 53, 10, 53, 12, 53, 366, 9, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1,
		54, 1, 54, 1, 54, 5, 54, 376, 8, 54, 10, 54, 12, 54, 379, 9, 54, 1, 54,
		1, 54, 1, 54, 1, 54, 1, 55, 4, 55, 386, 8, 55, 11, 55, 12, 55, 387, 1,
		55, 1, 55, 1, 56, 1, 56, 5, 56, 394, 8, 56, 10, 56, 12, 56, 397, 9, 56,
		1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 3, 57, 404, 8, 57, 1, 58, 1, 58, 1,
		58, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 377, 0, 60, 1, 1, 3, 2, 5, 3,
		7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13,
		27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22,
		45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31,
		63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40,
		81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49,
		99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111, 56, 113, 57,
		115, 0, 117, 0, 119, 0, 1, 0, 17, 3, 0, 65, 90, 95, 95, 97, 122, 5, 0,
		45, 45, 48, 57, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95,
		97, 122, 1, 0, 49, 57, 1, 0, 48, 57, 2, 0, 88, 88, 120, 120, 3, 0, 48,
		57, 65, 70, 97, 102, 1, 0, 48, 55, 2, 0, 66, 66, 98, 98, 1, 0, 48, 49,
		2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 4, 0, 10, 10, 13, 13, 39,
		39, 92, 92, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 3, 0, 9, 10, 13, 13,
		32, 32, 2, 0, 10, 10, 13, 13, 8, 0, 39, 39, 47, 47, 92, 92, 96, 96, 102,
		102, 110, 110, 114, 114, 116, 116, 437, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0,
		0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
		0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
		0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1,
		0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35,
		1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0,
		43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0,
		0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0,
		0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0,
		0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1,
		0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81,
		1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0,
		89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0,
		0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0,
		0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111,
		1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 1, 121, 1, 0, 0, 0, 3, 123, 1, 0, 0, 0,
		5, 125, 1, 0, 0, 0, 7, 127, 1, 0, 0, 0, 9, 130, 1, 0, 0, 0, 11, 134, 1,
		0, 0, 0, 13, 137, 1, 0, 0, 0, 15, 139, 1, 0, 0, 0, 17, 141, 1, 0, 0, 0,
		19, 143, 1, 0, 0, 0, 21, 145, 1, 0, 0, 0, 23, 147, 1, 0, 0, 0, 25, 149,
		1, 0, 0, 0, 27, 152, 1, 0, 0, 0, 29, 154, 1, 0, 0, 0, 31, 156, 1, 0, 0,
		0, 33, 159, 1, 0, 0, 0, 35, 161, 1, 0, 0, 0, 37, 164, 1, 0, 0, 0, 39, 168,
		1, 0, 0, 0, 41, 171, 1, 0, 0, 0, 43, 174, 1, 0, 0, 0, 45, 177, 1, 0, 0,
		0, 47, 180, 1, 0, 0, 0, 49, 182, 1, 0, 0, 0, 51, 184, 1, 0, 0, 0, 53, 186,
		1, 0, 0, 0, 55, 189, 1, 0, 0, 0, 57, 191, 1, 0, 0, 0, 59, 193, 1, 0, 0,
		0, 61, 196, 1, 0, 0, 0, 63, 199, 1, 0, 0, 0, 65, 202, 1, 0, 0, 0, 67, 204,
		1, 0, 0, 0, 69, 206, 1, 0, 0, 0, 71, 209, 1, 0, 0, 0, 73, 212, 1, 0, 0,
		0, 75, 215, 1, 0, 0, 0, 77, 217, 1, 0, 0, 0, 79, 222, 1, 0, 0, 0, 81, 228,
		1, 0, 0, 0, 83, 233, 1, 0, 0, 0, 85, 237, 1, 0, 0, 0, 87, 243, 1, 0, 0,
		0, 89, 250, 1, 0, 0, 0, 91, 255, 1, 0, 0, 0, 93, 276, 1, 0, 0, 0, 95, 278,
		1, 0, 0, 0, 97, 285, 1, 0, 0, 0, 99, 291, 1, 0, 0, 0, 101, 299, 1, 0, 0,
		0, 103, 318, 1, 0, 0, 0, 105, 349, 1, 0, 0, 0, 107, 359, 1, 0, 0, 0, 109,
		369, 1, 0, 0, 0, 111, 385, 1, 0, 0, 0, 113, 391, 1, 0, 0, 0, 115, 400,
		1, 0, 0, 0, 117, 405, 1, 0, 0, 0, 119, 411, 1, 0, 0, 0, 121, 122, 5, 46,
		0, 0, 122, 2, 1, 0, 0, 0, 123, 124, 5, 91, 0, 0, 124, 4, 1, 0, 0, 0, 125,
		126, 5, 93, 0, 0, 126, 6, 1, 0, 0, 0, 127, 128, 5, 105, 0, 0, 128, 129,
		5, 115, 0, 0, 129, 8, 1, 0, 0, 0, 130, 131, 5, 110, 0, 0, 131, 132, 5,
		111, 0, 0, 132, 133, 5, 116, 0, 0, 133, 10, 1, 0, 0, 0, 134, 135, 5, 105,
		0, 0, 135, 136, 5, 110, 0, 0, 136, 12, 1, 0, 0, 0, 137, 138, 5, 40, 0,
		0, 138, 14, 1, 0, 0, 0, 139, 140, 5, 41, 0, 0, 140, 16, 1, 0, 0, 0, 141,
		142, 5, 33, 0, 0, 142, 18, 1, 0, 0, 0, 143, 144, 5, 126, 0, 0, 144, 20,
		1, 0, 0, 0, 145, 146, 5, 43, 0, 0, 146, 22, 1, 0, 0, 0, 147, 148, 5, 45,
		0, 0, 148, 24, 1, 0, 0, 0, 149, 150, 5, 42, 0, 0, 150, 151, 5, 42, 0, 0,
		151, 26, 1, 0, 0, 0, 152, 153, 5, 42, 0, 0, 153, 28, 1, 0, 0, 0, 154, 155,
		5, 47, 0, 0, 155, 30, 1, 0, 0, 0, 156, 157, 5, 47, 0, 0, 157, 158, 5, 47,
		0, 0, 158, 32, 1, 0, 0, 0, 159, 160, 5, 37, 0, 0, 160, 34, 1, 0, 0, 0,
		161, 162, 5, 38, 0, 0, 162, 163, 5, 38, 0, 0, 163, 36, 1, 0, 0, 0, 164,
		165, 5, 97, 0, 0, 165, 166, 5, 110, 0, 0, 166, 167, 5, 100, 0, 0, 167,
		38, 1, 0, 0, 0, 168, 169, 5, 124, 0, 0, 169, 170, 5, 124, 0, 0, 170, 40,
		1, 0, 0, 0, 171, 172, 5, 111, 0, 0, 172, 173, 5, 114, 0, 0, 173, 42, 1,
		0, 0, 0, 174, 175, 5, 60, 0, 0, 175, 176, 5, 60, 0, 0, 176, 44, 1, 0, 0,
		0, 177, 178, 5, 62, 0, 0, 178, 179, 5, 62, 0, 0, 179, 46, 1, 0, 0, 0, 180,
		181, 5, 38, 0, 0, 181, 48, 1, 0, 0, 0, 182, 183, 5, 94, 0, 0, 183, 50,
		1, 0, 0, 0, 184, 185, 5, 124, 0, 0, 185, 52, 1, 0, 0, 0, 186, 187, 5, 60,
		0, 0, 187, 188, 5, 61, 0, 0, 188, 54, 1, 0, 0, 0, 189, 190, 5, 60, 0, 0,
		190, 56, 1, 0, 0, 0, 191, 192, 5, 62, 0, 0, 192, 58, 1, 0, 0, 0, 193, 194,
		5, 62, 0, 0, 194, 195, 5, 61, 0, 0, 195, 60, 1, 0, 0, 0, 196, 197, 5, 61,
		0, 0, 197, 198, 5, 61, 0, 0, 198, 62, 1, 0, 0, 0, 199, 200, 5, 33, 0, 0,
		200, 201, 5, 61, 0, 0, 201, 64, 1, 0, 0, 0, 202, 203, 5, 63, 0, 0, 203,
		66, 1, 0, 0, 0, 204, 205, 5, 58, 0, 0, 205, 68, 1, 0, 0, 0, 206, 207, 5,
		63, 0, 0, 207, 208, 5, 58, 0, 0, 208, 70, 1, 0, 0, 0, 209, 210, 5, 63,
		0, 0, 210, 211, 5, 63, 0, 0, 211, 72, 1, 0, 0, 0, 212, 213, 5, 97, 0, 0,
		213, 214, 5, 115, 0, 0, 214, 74, 1, 0, 0, 0, 215, 216, 5, 44, 0, 0, 216,
		76, 1, 0, 0, 0, 217, 218, 5, 116, 0, 0, 218, 219, 5, 114, 0, 0, 219, 220,
		5, 117, 0, 0, 220, 221, 5, 101, 0, 0, 221, 78, 1, 0, 0, 0, 222, 223, 5,
		102, 0, 0, 223, 224, 5, 97, 0, 0, 224, 225, 5, 108, 0, 0, 225, 226, 5,
		115, 0, 0, 226, 227, 5, 101, 0, 0, 227, 80, 1, 0, 0, 0, 228, 229, 5, 110,
		0, 0, 229, 230, 5, 117, 0, 0, 230, 231, 5, 108, 0, 0, 231, 232, 5, 108,
		0, 0, 232, 82, 1, 0, 0, 0, 233, 234, 5, 105, 0, 0, 234, 235, 5, 110, 0,
		0, 235, 236, 5, 116, 0, 0, 236, 84, 1, 0, 0, 0, 237, 238, 5, 102, 0, 0,
		238, 239, 5, 108, 0, 0, 239, 240, 5, 111, 0, 0, 240, 241, 5, 97, 0, 0,
		241, 242, 5, 116, 0, 0, 242, 86, 1, 0, 0, 0, 243, 244, 5, 115, 0, 0, 244,
		245, 5, 116, 0, 0, 245, 246, 5, 114, 0, 0, 246, 247, 5, 105, 0, 0, 247,
		248, 5, 110, 0, 0, 248, 249, 5, 103, 0, 0, 249, 88, 1, 0, 0, 0, 250, 251,
		5, 98, 0, 0, 251, 252, 5, 111, 0, 0, 252, 253, 5, 111, 0, 0, 253, 254,
		5, 108, 0, 0, 254, 90, 1, 0, 0, 0, 255, 259, 7, 0, 0, 0, 256, 258, 7, 1,
		0, 0, 257, 256, 1, 0, 0, 0, 258, 261, 1, 0, 0, 0, 259, 257, 1, 0, 0, 0,
		259, 260, 1, 0, 0, 0, 260, 263, 1, 0, 0, 0, 261, 259, 1, 0, 0, 0, 262,
		264, 7, 2, 0, 0, 263, 262, 1, 0, 0, 0, 263, 264, 1, 0, 0, 0, 264, 92, 1,
		0, 0, 0, 265, 267, 5, 45, 0, 0, 266, 265, 1, 0, 0, 0, 266, 267, 1, 0, 0,
		0, 267, 268, 1, 0, 0, 0, 268, 272, 7, 3, 0, 0, 269, 271, 7, 4, 0, 0, 270,
		269, 1, 0, 0, 0, 271, 274, 1, 0, 0, 0, 272, 270, 1, 0, 0, 0, 272, 273,
		1, 0, 0, 0, 273, 277, 1, 0, 0, 0, 274, 272, 1, 0, 0, 0, 275, 277, 5, 48,
		0, 0, 276, 266, 1, 0, 0, 0, 276, 275, 1, 0, 0, 0, 277, 94, 1, 0, 0, 0,
		278, 279, 5, 48, 0, 0, 279, 281, 7, 5, 0, 0, 280, 282, 7, 6, 0, 0, 281,
		280, 1, 0, 0, 0, 282, 283, 1, 0, 0, 0, 283, 281, 1, 0, 0, 0, 283, 284,
		1, 0, 0, 0, 284, 96, 1, 0, 0, 0, 285, 287, 5, 48, 0, 0, 286, 288, 7, 7,
		0, 0, 287, 286, 1, 0, 0, 0, 288, 289, 1, 0, 0, 0, 289, 287, 1, 0, 0, 0,
		289, 290, 1, 0, 0, 0, 290, 98, 1, 0, 0, 0, 291, 292, 5, 48, 0, 0, 292,
		294, 7, 8, 0, 0, 293, 295, 7, 9, 0, 0, 294, 293, 1, 0, 0, 0, 295, 296,
		1, 0, 0, 0, 296, 294, 1, 0, 0, 0, 296, 297, 1, 0, 0, 0, 297, 100, 1, 0,
		0, 0, 298, 300, 5, 45, 0, 0, 299, 298, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0,
		300, 309, 1, 0, 0, 0, 301, 310, 5, 48, 0, 0, 302, 306, 7, 3, 0, 0, 303,
		305, 7, 4, 0, 0, 304, 303, 1, 0, 0, 0, 305, 308, 1, 0, 0, 0, 306, 304,
		1, 0, 0, 0, 306, 307, 1, 0, 0, 0, 307, 310, 1, 0, 0, 0, 308, 306, 1, 0,
		0, 0, 309, 301, 1, 0, 0, 0, 309, 302, 1, 0, 0, 0, 310, 311, 1, 0, 0, 0,
		311, 313, 5, 46, 0, 0, 312, 314, 7, 4, 0, 0, 313, 312, 1, 0, 0, 0, 314,
		315, 1, 0, 0, 0, 315, 313, 1, 0, 0, 0, 315, 316, 1, 0, 0, 0, 316, 102,
		1, 0, 0, 0, 317, 319, 5, 45, 0, 0, 318, 317, 1, 0, 0, 0, 318, 319, 1, 0,
		0, 0, 319, 328, 1, 0, 0, 0, 320, 329, 5, 48, 0, 0, 321, 325, 7, 3, 0, 0,
		322, 324, 7, 4, 0, 0, 323, 322, 1, 0, 0, 0, 324, 327, 1, 0, 0, 0, 325,
		323, 1, 0, 0, 0, 325, 326, 1, 0, 0, 0, 326, 329, 1, 0, 0, 0, 327, 325,
		1, 0, 0, 0, 328, 320, 1, 0, 0, 0, 328, 321, 1, 0, 0, 0, 329, 336, 1, 0,
		0, 0, 330, 332, 5, 46, 0, 0, 331, 333, 7, 4, 0, 0, 332, 331, 1, 0, 0, 0,
		333, 334, 1, 0, 0, 0, 334, 332, 1, 0, 0, 0, 334, 335, 1, 0, 0, 0, 335,
		337, 1, 0, 0, 0, 336, 330, 1, 0, 0, 0, 336, 337, 1, 0, 0, 0, 337, 338,
		1, 0, 0, 0, 338, 340, 7, 10, 0, 0, 339, 341, 7, 11, 0, 0, 340, 339, 1,
		0, 0, 0, 340, 341, 1, 0, 0, 0, 341, 342, 1, 0, 0, 0, 342, 346, 7, 3, 0,
		0, 343, 345, 7, 4, 0, 0, 344, 343, 1, 0, 0, 0, 345, 348, 1, 0, 0, 0, 346,
		344, 1, 0, 0, 0, 346, 347, 1, 0, 0, 0, 347, 104, 1, 0, 0, 0, 348, 346,
		1, 0, 0, 0, 349, 354, 5, 39, 0, 0, 350, 353, 3, 115, 57, 0, 351, 353, 8,
		12, 0, 0, 352, 350, 1, 0, 0, 0, 352, 351, 1, 0, 0, 0, 353, 356, 1, 0, 0,
		0, 354, 352, 1, 0, 0, 0, 354, 355, 1, 0, 0, 0, 355, 357, 1, 0, 0, 0, 356,
		354, 1, 0, 0, 0, 357, 358, 5, 39, 0, 0, 358, 106, 1, 0, 0, 0, 359, 364,
		5, 34, 0, 0, 360, 363, 3, 115, 57, 0, 361, 363, 8, 13, 0, 0, 362, 360,
		1, 0, 0, 0, 362, 361, 1, 0, 0, 0, 363, 366, 1, 0, 0, 0, 364, 362, 1, 0,
		0, 0, 364, 365, 1, 0, 0, 0, 365, 367, 1, 0, 0, 0, 366, 364, 1, 0, 0, 0,
		367, 368, 5, 34, 0, 0, 368, 108, 1, 0, 0, 0, 369, 370, 5, 34, 0, 0, 370,
		371, 5, 34, 0, 0, 371, 372, 5, 34, 0, 0, 372, 377, 1, 0, 0, 0, 373, 376,
		3, 115, 57, 0, 374, 376, 9, 0, 0, 0, 375, 373, 1, 0, 0, 0, 375, 374, 1,
		0, 0, 0, 376, 379, 1, 0, 0, 0, 377, 378, 1, 0, 0, 0, 377, 375, 1, 0, 0,
		0, 378, 380, 1, 0, 0, 0, 379, 377, 1, 0, 0, 0, 380, 381, 5, 34, 0, 0, 381,
		382, 5, 34, 0, 0, 382, 383, 5, 34, 0, 0, 383, 110, 1, 0, 0, 0, 384, 386,
		7, 14, 0, 0, 385, 384, 1, 0, 0, 0, 386, 387, 1, 0, 0, 0, 387, 385, 1, 0,
		0, 0, 387, 388, 1, 0, 0, 0, 388, 389, 1, 0, 0, 0, 389, 390, 6, 55, 0, 0,
		390, 112, 1, 0, 0, 0, 391, 395, 5, 35, 0, 0, 392, 394, 8, 15, 0, 0, 393,
		392, 1, 0, 0, 0, 394, 397, 1, 0, 0, 0, 395, 393, 1, 0, 0, 0, 395, 396,
		1, 0, 0, 0, 396, 398, 1, 0, 0, 0, 397, 395, 1, 0, 0, 0, 398, 399, 6, 56,
		0, 0, 399, 114, 1, 0, 0, 0, 400, 403, 5, 92, 0, 0, 401, 404, 7, 16, 0,
		0, 402, 404, 3, 117, 58, 0, 403, 401, 1, 0, 0, 0, 403, 402, 1, 0, 0, 0,
		404, 116, 1, 0, 0, 0, 405, 406, 5, 117, 0, 0, 406, 407, 3, 119, 59, 0,
		407, 408, 3, 119, 59, 0, 408, 409, 3, 119, 59, 0, 409, 410, 3, 119, 59,
		0, 410, 118, 1, 0, 0, 0, 411, 412, 7, 6, 0, 0, 412, 120, 1, 0, 0, 0, 29,
		0, 259, 263, 266, 272, 276, 283, 289, 296, 299, 306, 309, 315, 318, 325,
		328, 334, 336, 340, 346, 352, 354, 362, 364, 375, 377, 387, 395, 403, 1,
		0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// DCellLexerInit initializes any static state used to implement DCellLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewDCellLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func DCellLexerInit() {
	staticData := &DCellLexerLexerStaticData
	staticData.once.Do(dcelllexerLexerInit)
}

// NewDCellLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewDCellLexer(input antlr.CharStream) *DCellLexer {
	DCellLexerInit()
	l := new(DCellLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &DCellLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "DCell.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DCellLexer tokens.
const (
	DCellLexerT__0                = 1
	DCellLexerT__1                = 2
	DCellLexerT__2                = 3
	DCellLexerT__3                = 4
	DCellLexerT__4                = 5
	DCellLexerT__5                = 6
	DCellLexerT__6                = 7
	DCellLexerT__7                = 8
	DCellLexerT__8                = 9
	DCellLexerT__9                = 10
	DCellLexerT__10               = 11
	DCellLexerT__11               = 12
	DCellLexerT__12               = 13
	DCellLexerT__13               = 14
	DCellLexerT__14               = 15
	DCellLexerT__15               = 16
	DCellLexerT__16               = 17
	DCellLexerT__17               = 18
	DCellLexerT__18               = 19
	DCellLexerT__19               = 20
	DCellLexerT__20               = 21
	DCellLexerT__21               = 22
	DCellLexerT__22               = 23
	DCellLexerT__23               = 24
	DCellLexerT__24               = 25
	DCellLexerT__25               = 26
	DCellLexerT__26               = 27
	DCellLexerT__27               = 28
	DCellLexerT__28               = 29
	DCellLexerT__29               = 30
	DCellLexerT__30               = 31
	DCellLexerT__31               = 32
	DCellLexerT__32               = 33
	DCellLexerT__33               = 34
	DCellLexerT__34               = 35
	DCellLexerT__35               = 36
	DCellLexerT__36               = 37
	DCellLexerT__37               = 38
	DCellLexerT__38               = 39
	DCellLexerT__39               = 40
	DCellLexerT__40               = 41
	DCellLexerT__41               = 42
	DCellLexerT__42               = 43
	DCellLexerT__43               = 44
	DCellLexerT__44               = 45
	DCellLexerIDENTIFIER          = 46
	DCellLexerDECIMAL_INTEGER     = 47
	DCellLexerHEX_INTEGER         = 48
	DCellLexerOCTAL_INTEGER       = 49
	DCellLexerBINARY_INTEGER      = 50
	DCellLexerDECIMAL_FLOAT       = 51
	DCellLexerSCIENTIFIC_FLOAT    = 52
	DCellLexerSINGLE_QUOTE_STRING = 53
	DCellLexerDOUBLE_QUOTE_STRING = 54
	DCellLexerTRIPLE_QUOTE_STRING = 55
	DCellLexerWS                  = 56
	DCellLexerCOMMENT             = 57
)
